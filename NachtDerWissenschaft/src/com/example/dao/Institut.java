package com.example.dao;

import java.util.List;
import de.greenrobot.dao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit. 
/**
 * Entity mapped to table INSTITUT.
 */
public class Institut {

    private Long id;
    private String name;
    private String beschreibungkurz;
    private String beschreibunglang;
    private String bildurl;
    private String weburl;
    private String haltestelleName;
    private String haltestelleLaenge;
    private String haltestelleBreite;
    private String markerLaenge;
    private String markerBreite;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient InstitutDao myDao;

    private List<Veranstaltung> veranstaltungList;

    public Institut() {
    }

    public Institut(Long id) {
        this.id = id;
    }

    public Institut(Long id, String name, String beschreibungkurz, String beschreibunglang, String bildurl, String weburl, String haltestelleName, String haltestelleLaenge, String haltestelleBreite, String markerLaenge, String markerBreite) {
        this.id = id;
        this.name = name;
        this.beschreibungkurz = beschreibungkurz;
        this.beschreibunglang = beschreibunglang;
        this.bildurl = bildurl;
        this.weburl = weburl;
        this.haltestelleName = haltestelleName;
        this.haltestelleLaenge = haltestelleLaenge;
        this.haltestelleBreite = haltestelleBreite;
        this.markerLaenge = markerLaenge;
        this.markerBreite = markerBreite;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getInstitutDao() : null;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getBeschreibungkurz() {
        return beschreibungkurz;
    }

    public void setBeschreibungkurz(String beschreibungkurz) {
        this.beschreibungkurz = beschreibungkurz;
    }

    public String getBeschreibunglang() {
        return beschreibunglang;
    }

    public void setBeschreibunglang(String beschreibunglang) {
        this.beschreibunglang = beschreibunglang;
    }

    public String getBildurl() {
        return bildurl;
    }

    public void setBildurl(String bildurl) {
        this.bildurl = bildurl;
    }

    public String getWeburl() {
        return weburl;
    }

    public void setWeburl(String weburl) {
        this.weburl = weburl;
    }

    public String getHaltestelleName() {
        return haltestelleName;
    }

    public void setHaltestelleName(String haltestelleName) {
        this.haltestelleName = haltestelleName;
    }

    public String getHaltestelleLaenge() {
        return haltestelleLaenge;
    }

    public void setHaltestelleLaenge(String haltestelleLaenge) {
        this.haltestelleLaenge = haltestelleLaenge;
    }

    public String getHaltestelleBreite() {
        return haltestelleBreite;
    }

    public void setHaltestelleBreite(String haltestelleBreite) {
        this.haltestelleBreite = haltestelleBreite;
    }

    public String getMarkerLaenge() {
        return markerLaenge;
    }

    public void setMarkerLaenge(String markerLaenge) {
        this.markerLaenge = markerLaenge;
    }

    public String getMarkerBreite() {
        return markerBreite;
    }

    public void setMarkerBreite(String markerBreite) {
        this.markerBreite = markerBreite;
    }

    /** To-many relationship, resolved on first access (and after reset). Changes to to-many relations are not persisted, make changes to the target entity. */
    public List<Veranstaltung> getVeranstaltungList() {
        if (veranstaltungList == null) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            VeranstaltungDao targetDao = daoSession.getVeranstaltungDao();
            List<Veranstaltung> veranstaltungListNew = targetDao._queryInstitut_VeranstaltungList(id);
            synchronized (this) {
                if(veranstaltungList == null) {
                    veranstaltungList = veranstaltungListNew;
                }
            }
        }
        return veranstaltungList;
    }

    /** Resets a to-many relationship, making the next get call to query for a fresh result. */
    public synchronized void resetVeranstaltungList() {
        veranstaltungList = null;
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

}
